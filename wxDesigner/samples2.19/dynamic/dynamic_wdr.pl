#-----------------------------------------------------------------------------
# Perl source generated by wxDesigner from file: dynamic.wdr
# Do not modify this file, all changes will be lost!
#-----------------------------------------------------------------------------

use Wx;
use strict;

use Wx qw( wxDefaultSize wxDefaultPosition wxID_OK wxID_CANCEL wxID_YES wxID_EXIT wxID_ABOUT );
use Wx qw( wxVERTICAL wxHORIZONTAL wxALL wxLEFT wxRIGHT wxTOP wxBOTTOM wxCENTRE wxGROW wxADJUST_MINSIZE );
use Wx qw( wxALIGN_RIGHT wxALIGN_BOTTOM wxALIGN_CENTER wxALIGN_CENTER_VERTICAL wxALIGN_CENTER_HORIZONTAL );
use Wx qw( wxLI_HORIZONTAL wxLB_SINGLE wxLB_ALWAYS_SB );

# Bitmap functions

use Wx qw( wxNullBitmap wxBITMAP_TYPE_PNG );

# Window functions

use vars qw($ID_TEXT); $ID_TEXT = 10000;
use vars qw($ID_CHOICE); $ID_CHOICE = 10001;
use vars qw($ID_LINE); $ID_LINE = 10002;

sub MyDialogFunc {
    my( $item0 ) = Wx::BoxSizer->new( wxVERTICAL );
    
    my( $item2 ) = Wx::StaticBox->new( $_[0], -1, "Text" );
    my( $item1 ) = Wx::StaticBoxSizer->new( $item2, wxVERTICAL );
    $_[0]->{my_sizer} = $item1;
    
    my( $item3 ) = Wx::StaticText->new( $_[0], $main::ID_TEXT, "This demonstrates a dynamic interface", wxDefaultPosition, wxDefaultSize, 0 );
    $item1->AddWindow( $item3, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item4 ) = Wx::Choice->new( $_[0], $main::ID_CHOICE, wxDefaultPosition, [160,-1], 
        ["Page 1","Page 2"] , 0 );
    $item1->AddWindow( $item4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    $item0->Add( $item1, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item5 ) = Wx::StaticLine->new( $_[0], $main::ID_LINE, wxDefaultPosition, [20,-1], wxLI_HORIZONTAL );
    $item0->AddWindow( $item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    my( $item6 ) = Wx::Button->new( $_[0], wxID_OK, "OK", wxDefaultPosition, wxDefaultSize, 0 );
    $item0->AddWindow( $item6, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $set_size ) = @_ >= 3 ? $_[2] : 1;
    my( $call_fit ) = @_ >= 2 ? $_[1] : 1;
    if( $set_size == 1 ) {
         $_[0]->SetSizer( $item0 );
         
         if( $call_fit == 1 ) {
             $item0->SetSizeHints( $_[0] );
         }
    }
    
    $item0;
}

use vars qw($ID_TEXT1); $ID_TEXT1 = 10003;
use vars qw($ID_TEXTCTRL1); $ID_TEXTCTRL1 = 10004;
use vars qw($ID_TEXT2); $ID_TEXT2 = 10005;
use vars qw($ID_TEXTCTRL2); $ID_TEXTCTRL2 = 10006;

sub MyPageOneFunc {
    my( $item0 ) = Wx::FlexGridSizer->new( 0, 2, 0, 0 );
    
    my( $item1 ) = Wx::StaticText->new( $_[0], $main::ID_TEXT1, "Text input:", wxDefaultPosition, wxDefaultSize, 0 );
    $item0->AddWindow( $item1, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item2 ) = Wx::TextCtrl->new( $_[0], $main::ID_TEXTCTRL1, "", wxDefaultPosition, [140,-1], 0 );
    $item0->AddWindow( $item2, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item3 ) = Wx::StaticText->new( $_[0], $main::ID_TEXT2, "More text:", wxDefaultPosition, wxDefaultSize, 0 );
    $item0->AddWindow( $item3, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $item4 ) = Wx::TextCtrl->new( $_[0], $main::ID_TEXTCTRL2, "", wxDefaultPosition, [140,-1], 0 );
    $item0->AddWindow( $item4, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $set_size ) = @_ >= 3 ? $_[2] : 1;
    my( $call_fit ) = @_ >= 2 ? $_[1] : 1;
    if( $set_size == 1 ) {
         $_[0]->SetSizer( $item0 );
         
         if( $call_fit == 1 ) {
             $item0->SetSizeHints( $_[0] );
         }
    }
    
    $item0;
}

use vars qw($ID_LISTBOX); $ID_LISTBOX = 10007;

sub MyPageTwoFunc {
    my( $item0 ) = Wx::BoxSizer->new( wxVERTICAL );
    
    my( $item1 ) = Wx::ListBox->new( $_[0], $main::ID_LISTBOX, wxDefaultPosition, [160,100], 
        ["Item 1","Item 2","Item 3","Item 4"] , wxLB_SINGLE|wxLB_ALWAYS_SB );
    $item0->AddWindow( $item1, 0, wxALIGN_CENTER|wxALL, 5 );

    my( $set_size ) = @_ >= 3 ? $_[2] : 1;
    my( $call_fit ) = @_ >= 2 ? $_[1] : 1;
    if( $set_size == 1 ) {
         $_[0]->SetSizer( $item0 );
         
         if( $call_fit == 1 ) {
             $item0->SetSizeHints( $_[0] );
         }
    }
    
    $item0;
}

# Menu bar functions

use vars qw($ID_MENU); $ID_MENU = 10008;
use vars qw($ID_TEST); $ID_TEST = 10009;

sub MyMenuBarFunc {
    my( $item0 ) = Wx::MenuBar->new();
    
    my( $item1 ) = Wx::Menu->new();
    $item1->AppendString( wxID_ABOUT, "About", "" );
    $item1->AppendString( $main::ID_TEST, "Test...", "" );
    $item1->AppendString( wxID_EXIT, "Quit", "" );
    $item0->Append( $item1, "File" );
    
    $item0;
}


# Toolbar functions


# End of generated file
