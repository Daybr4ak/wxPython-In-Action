//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: toolbar.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
    #pragma implementation "toolbar_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "toolbar_wdr.h"

#include <wx/intl.h>

// Euro sign hack of the year
#if wxUSE_UNICODE
    #define __WDR_EURO__ wxT("\u20ac")
#else
    #if defined(__WXMAC__)
        #define __WDR_EURO__ wxT("\xdb")
    #elif defined(__WXMSW__)
        #define __WDR_EURO__ wxT("\x80")
    #else
        #define __WDR_EURO__ wxT("\xa4")
    #endif
#endif

// Implement window functions

// Implement menubar functions

wxMenuBar *MyMenuBarFunc()
{
    wxMenuBar *item0 = new wxMenuBar;
    
    wxMenu* item1 = new wxMenu;
    item1->Append( wxID_ABOUT, _("About\tAlt-A"), wxT("") );
    item1->Append( wxID_SAVE, _("Save\tAlt-S"), wxT("") );
    item1->Append( wxID_EXIT, _("Quit\tAlt-Q"), wxT("") );
    item0->Append( item1, _("File") );
    
    return item0;
}

// Implement toolbar functions

void MyToolBarFunc( wxToolBar *parent )
{
    parent->SetMargins( 2, 2 );
    
    parent->AddTool( wxID_EXIT, _("Exit"), MyBitmapsFunc( 0 ), wxNullBitmap, wxITEM_NORMAL, _("Exit app"), _("Exit application") );
    parent->AddSeparator();
    parent->AddTool( ID_OPEN, wxT(""), MyBitmapsFunc( 1 ), wxNullBitmap, wxITEM_NORMAL, _("Open"), _("Open document") );
    parent->AddTool( wxID_SAVE, wxT(""), MyBitmapsFunc( 5 ), wxNullBitmap, wxITEM_NORMAL, _("Save"), _("Save document") );
    parent->AddSeparator();
    parent->AddTool( ID_CUT, _("Cut"), MyBitmapsFunc( 2 ), wxNullBitmap, wxITEM_NORMAL, _("Cut"), _("Move to clipboard") );
    parent->EnableTool( ID_CUT, FALSE );
    parent->AddTool( ID_COPY, _("Copy"), MyBitmapsFunc( 3 ), wxNullBitmap, wxITEM_NORMAL, _("Copy"), _("Copy to clipboard") );
    parent->EnableTool( ID_COPY, FALSE );
    parent->AddTool( ID_PASTE, _("Paste"), MyBitmapsFunc( 4 ), wxNullBitmap, wxITEM_CHECK, _("Paste"), _("Paste from clipboard") );
    parent->ToggleTool( ID_PASTE, TRUE );
    parent->AddSeparator();
    wxString strs1[] = 
    {
        _("Times New Roman"), 
        _("Arial"), 
        _("Courier")
    };
    wxComboBox *item1 = new wxComboBox( parent, ID_FONT, wxT(""), wxDefaultPosition, wxSize(150,-1), 3, strs1, wxCB_DROPDOWN );
    item1->SetToolTip( _("This is a toolbar control") );
    parent->AddControl( item1 );
    
    parent->Realize();
}

// Implement bitmap functions

wxBitmap MyBitmapsFunc( size_t index )
{
    if (index == 0)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 3 1",
        "  c None",
        "a c Black",
        "c c #F8FCF8",
        /* pixels */
        "                ",
        "   aaaaaaaa     ",
        "   accccccaa    ",
        "   accccccaca   ",
        "   accccccaaaa  ",
        "   accccccccca  ",
        "   accccccccca  ",
        "   accccccccca  ",
        "   accccccccca  ",
        "   accccccccca  ",
        "   accccccccca  ",
        "   accccccccca  ",
        "   accccccccca  ",
        "   aaaaaaaaaaa  ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 1)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 5 1",
        "  c None",
        "a c Black",
        "b c #F8FC00",
        "d c #808000",
        "e c #F8FCF8",
        /* pixels */
        "                ",
        "          aaa   ",
        "         a   a a",
        "              aa",
        "  aaa        aaa",
        " abebaaaaaaa    ",
        " aebebebebea    ",
        " abebebebeba    ",
        " aebebaaaaaaaaaa",
        " abebaddddddddda",
        " aeeaddddddddda ",
        " abaddddddddda  ",
        " aaddddddddda   ",
        " aaaaaaaaaaa    ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 2)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 3 1",
        "  c None",
        "a c Black",
        "b c #000080",
        /* pixels */
        "                ",
        "     a   a      ",
        "     a   a      ",
        "     a   a      ",
        "     aa aa      ",
        "      a a       ",
        "      aaa       ",
        "       a        ",
        "      bab       ",
        "      b bbb     ",
        "    bbb b  b    ",
        "   b  b b  b    ",
        "   b  b b  b    ",
        "   b  b  bb     ",
        "    bb          "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 3)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 4 1",
        "  c None",
        "a c Black",
        "c c #000080",
        "d c #F8FCF8",
        /* pixels */
        "                ",
        " aaaaaa         ",
        " addddaa        ",
        " addddada       ",
        " adaadacccccc   ",
        " adddddcddddcc  ",
        " adaaaacddddcdc ",
        " adddddcdaadcccc",
        " adaaaacdddddddc",
        " adddddcdaaaaadc",
        " aaaaaacdddddddc",
        "       cdaaaaadc",
        "       cdddddddc",
        "       ccccccccc",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 4)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 6 1",
        "  c None",
        "a c Black",
        "b c #808080",
        "d c #F8FC00",
        "e c #000080",
        "f c #F8FCF8",
        /* pixels */
        "                ",
        "     aaaa       ",
        " aaaaaddaaaaa   ",
        "abbbadaadabbba  ",
        "abba      abba  ",
        "abbaaaaaaaabba  ",
        "abbbbbbbbbbbba  ",
        "abbbbbeeeeeeea  ",
        "abbbbbefffffee  ",
        "abbbbbefffffefe ",
        "abbbbbefeeefeee ",
        "abbbbbefffffffe ",
        "abbbbbefeeeeefe ",
        " aaaaaefffffffe ",
        "      eeeeeeeee "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 5)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 4 1",
        "  c None",
        "a c Black",
        "b c #808080",
        "d c #808000",
        /* pixels */
        "                ",
        " aaaaaaaaaaaaaa ",
        " ada        a a ",
        " ada        aaa ",
        " ada        ada ",
        " ada        ada ",
        " ada        ada ",
        " ada        ada ",
        " addaaaaaaaabda ",
        " adddddddddddda ",
        " addaaaaaaaaada ",
        " addaaaaaa  ada ",
        " addaaaaaa  ada ",
        " addaaaaaa  ada ",
        "  aaaaaaaaaaaaa "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    return wxNullBitmap;
}


// End of generated file
