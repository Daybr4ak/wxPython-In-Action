//-----------------------------------------------------------------------------
// C# source generated by wxDesigner from file: toolbar.wdr
// Do not modify this file, all changes will be lost!
//-----------------------------------------------------------------------------

using System;
using System.Drawing;
using wx;

public class toolbarWdrClass
{
   // Window functions

    // Menubar functions

    public const int ID_MENU = 10000;

    public static MenuBar MyMenuBarFunc()
    {
        MenuBar item0 = new MenuBar();
    
        Menu item1 = new Menu();
        item1.Append( (int)MenuIDs.wxID_ABOUT, "About\tAlt-A", "" );
        item1.Append( (int)MenuIDs.wxID_SAVE, "Save\tAlt-S", "" );
        item1.Append( (int)MenuIDs.wxID_EXIT, "Quit\tAlt-Q", "" );
        item0.Append( item1, "File" );
        
        return item0;

    }
    // Toolbar functions

    public const int ID_OPEN = 10001;
    public const int ID_CUT = 10002;
    public const int ID_COPY = 10003;
    public const int ID_PASTE = 10004;
    public const int ID_FONT = 10005;
    public static void MyToolBarFunc( ToolBar parent )
    {
        parent.Margins = new Size( 2,2 );
        
        parent.AddTool( (int)MenuIDs.wxID_EXIT, "Exit", MyBitmapsFunc( 0 ), NullObjects.wxNullBitmap, ItemKind.wxITEM_NORMAL, "Exit app", "Exit application", null );
        parent.AddSeparator();
        parent.AddTool( ID_OPEN, "", MyBitmapsFunc( 1 ), NullObjects.wxNullBitmap, ItemKind.wxITEM_NORMAL, "Open", "Open document", null );
        parent.AddTool( (int)MenuIDs.wxID_SAVE, "", MyBitmapsFunc( 5 ), NullObjects.wxNullBitmap, ItemKind.wxITEM_NORMAL, "Save", "Save document", null );
        parent.AddSeparator();
        parent.AddTool( ID_CUT, "Cut", MyBitmapsFunc( 2 ), NullObjects.wxNullBitmap, ItemKind.wxITEM_NORMAL, "Cut", "Move to clipboard", null );
        parent.EnableTool( ID_CUT, false );
        parent.AddTool( ID_COPY, "Copy", MyBitmapsFunc( 3 ), NullObjects.wxNullBitmap, ItemKind.wxITEM_NORMAL, "Copy", "Copy to clipboard", null );
        parent.EnableTool( ID_COPY, false );
        parent.AddTool( ID_PASTE, "Paste", MyBitmapsFunc( 4 ), NullObjects.wxNullBitmap, ItemKind.wxITEM_CHECK, "Paste", "Paste from clipboard", null );
        parent.ToggleTool( ID_PASTE, true );
        parent.AddSeparator();
        string[] strs2 = 
        {
            "Times New Roman", 
            "Arial", 
            "Courier"
        };
        ComboBox item2 = new ComboBox( parent, ID_FONT, "", Window.wxDefaultPosition, new Size(150,-1), strs2, ComboBox.wxCB_DROPDOWN );
        item2.ToolTip ="This is a toolbar control";
        parent.AddControl( item2 );
        
        parent.Realize();
    }
    
    // Bitmap functions

    
    public static wx.Bitmap MyBitmapsFunc( int index )
    {
        if (index == 0)
        {
             wx.Image image = new wx.Image( "toolbar_wdr/MyBitmapsFunc_0.png" );
             wx.Bitmap bitmap = new wx.Bitmap( image );
             return bitmap;
        }
        if (index == 1)
        {
             wx.Image image = new wx.Image( "toolbar_wdr/MyBitmapsFunc_1.png" );
             wx.Bitmap bitmap = new wx.Bitmap( image );
             return bitmap;
        }
        if (index == 2)
        {
             wx.Image image = new wx.Image( "toolbar_wdr/MyBitmapsFunc_2.png" );
             wx.Bitmap bitmap = new wx.Bitmap( image );
             return bitmap;
        }
        if (index == 3)
        {
             wx.Image image = new wx.Image( "toolbar_wdr/MyBitmapsFunc_3.png" );
             wx.Bitmap bitmap = new wx.Bitmap( image );
             return bitmap;
        }
        if (index == 4)
        {
             wx.Image image = new wx.Image( "toolbar_wdr/MyBitmapsFunc_4.png" );
             wx.Bitmap bitmap = new wx.Bitmap( image );
             return bitmap;
        }
        if (index == 5)
        {
             wx.Image image = new wx.Image( "toolbar_wdr/MyBitmapsFunc_5.png" );
             wx.Bitmap bitmap = new wx.Bitmap( image );
             return bitmap;
        }
        return new wx.Bitmap();
    }
}

// End of generated file
